{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Top","styles","container","width","padding","margin","background","borderRadius","display","flexDirection","alignItems","password","border","outline","statusBar","height","marginTop","strengthVeryWeak","maxWidth","backgroundColor","strengthWeak","strengthMedium","strengthStrong","strengthVeryStrong","message","button","cursor","color","fontWeight","disabledButton","opacity","App","useState","setPassword","passwordStrength","setPasswordStrength","isButtonDisabled","setIsButtonDisabled","setStrengthColor","useEffect","length","style","type","value","onChange","event","enteredValue","target","trim","placeholder","disabled","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAYMA,EAA+B,WACnC,OACI,oEA+FAC,EAAS,CACbC,UAAW,CACTC,MAAO,MACPC,QAAS,YACTC,OAAQ,YACRC,WAAY,MACZC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,SAAU,CACRR,MAAO,IACPC,QAAS,WACTQ,OAAQ,iBACRL,aAAc,OACdM,QAAS,QAEXC,UAAW,CACTX,MAAO,IACPY,OAAQ,GACRC,UAAW,GACXV,WAAY,OACZM,OAAQ,iBACRL,aAAc,OAEhBU,iBAAkB,CAChBF,OAAQ,OACRG,SAAU,OACVC,gBAAiB,OAEnBC,aAAc,CACZL,OAAQ,OACRG,SAAU,OACVC,gBAAiB,UAEnBE,eAAgB,CACdN,OAAQ,OACRG,SAAU,OACVC,gBAAiB,UAEnBG,eAAgB,CACdP,OAAQ,OACRG,SAAU,OACVC,gBAAiB,QAEnBI,mBAAoB,CAClBR,OAAQ,OACRG,SAAU,OACVC,gBAAiB,SAEnBK,QAAS,CACPpB,QAAS,UAEXqB,OAAQ,CACNrB,QAAS,YACTsB,OAAQ,UACRpB,WAAY,SACZqB,MAAO,OACPC,WAAY,OACZhB,OAAQ,OACRL,aAAc,QAEhBsB,eAAgB,CACdH,OAAQ,cACRI,QAAS,KAIEC,EAhKsB,WAEnC,MAAgCC,mBAAiB,IAAjD,mBAAOrB,EAAP,KAAiBsB,EAAjB,KACA,EACED,mBAA2B,aAD7B,mBAAOE,EAAP,KAAyBC,EAAzB,KAEA,EAAgDH,oBAAkB,GAAlE,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAA0CL,mBAAiB,2BAA3D,mBAAsBM,GAAtB,WAQAC,qBAAU,WACJ5B,EAAS6B,QAAU,GACrBL,EAAoB,aACpBE,GAAoB,GACpBC,EAAiB,qBACR3B,EAAS6B,QAAU,GAC5BL,EAAoB,QACpBE,GAAoB,GACpBC,EAAiB,iBACR3B,EAAS6B,QAAU,GAC5BL,EAAoB,UACpBG,EAAiB,mBACR3B,EAAS6B,QAAU,IAC5BL,EAAoB,UACpBE,GAAoB,GACpBC,EAAiB,oBAEjBH,EAAoB,eACpBG,EAAiB,sBAEjBD,GAAoB,MAErB,CAAC1B,IASJ,OACE,sBAAK8B,MAAOxC,EAAOC,UAAnB,UACE,cAAC,EAAD,IACA,2DAGA,uBACEwC,KAAK,WACLC,MAAOhC,EACPiC,SA7Ce,SAACC,GACpB,IAAMC,EAAeD,EAAME,OAAOJ,MAAMK,OACxCf,EAAYa,IA4CRG,YAAY,mBACZR,MAAOxC,EAAOU,WAIhB,qBAAK8B,MAAOxC,EAAOa,UAAnB,SACE,qBACE2B,MAAK,2BAEAxC,EAAOmB,cAFP,IAGHjB,MAAM,GAAD,OAAMQ,EAAS6B,OAAS,GAAM,IAA9B,WAOX,qBAAKC,MAAOxC,EAAOuB,QAAnB,SAA6BU,IAG7B,wBACEO,MACEL,EAAgB,2BACPnC,EAAOwB,QAAWxB,EAAO4B,gBAC9B5B,EAAOwB,OAEbyB,SAAUd,EACVe,QA1CgB,WACpBC,MAAM,8CAkCJ,0BC/ESC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6c0d141e.chunk.js","sourcesContent":["// App.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './index.css';\r\n\r\n// Declare password strength type\r\ntype PasswordStrength =\r\n  | \"Very Weak\"\r\n  | \"Weak\"\r\n  | \"Medium\"\r\n  | \"Strong\"\r\n  | \"Very Strong\";\r\n\r\nconst Top: React.FunctionComponent = () => {\r\n  return(\r\n      <h1>Tyler's Password Strength Checker</h1>\r\n  )\r\n}\r\n\r\nconst App: React.FunctionComponent = () => {\r\n  // The password\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [passwordStrength, setPasswordStrength] =\r\n    useState<PasswordStrength>(\"Very Weak\");\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState<boolean>(true);\r\n  const [strengthColor, setStrengthColor] = useState<string>(\"styles.strengthVeryWeak\");\r\n\r\n  // This function will be triggered when the password input field changes\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const enteredValue = event.target.value.trim();\r\n    setPassword(enteredValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (password.length <= 4) {\r\n      setPasswordStrength(\"Very Weak\");\r\n      setIsButtonDisabled(true);\r\n      setStrengthColor(\"strengthVeryWeak\")\r\n    } else if (password.length <= 6) {\r\n      setPasswordStrength(\"Weak\");\r\n      setIsButtonDisabled(true);\r\n      setStrengthColor(\"strengthWeak\")\r\n    } else if (password.length <= 8) {\r\n      setPasswordStrength(\"Medium\");\r\n      setStrengthColor(\"strengthMedium\")\r\n    } else if (password.length <= 12) {\r\n      setPasswordStrength(\"Strong\");\r\n      setIsButtonDisabled(false);\r\n      setStrengthColor(\"strengthStrong\")\r\n    } else {\r\n      setPasswordStrength(\"Very Strong\");\r\n      setStrengthColor(\"strengthVeryStrong\")\r\n      \r\n      setIsButtonDisabled(false);\r\n    }\r\n  }, [password]);\r\n\r\n\r\n  // Button handler function\r\n  const buttonHandler = () => {\r\n    alert(\"You have entered a strong enough password\");\r\n    // Do other things here\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Top />\r\n      <h3>Password Strength Checker</h3>\r\n\r\n      {/* The input field */}\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={inputHandler}\r\n        placeholder=\"Enter a password\"\r\n        style={styles.password}\r\n      />\r\n\r\n      {/* This bar indicates the strength of the entered password */}\r\n      <div style={styles.statusBar}>\r\n        <div\r\n          style={{\r\n            \r\n            ...styles.strengthWeak,\r\n            width: `${(password.length / 16) * 100}%`,\r\n            \r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* Password strength message */}\r\n      <div style={styles.message}>{passwordStrength}</div>\r\n\r\n      {//This button is only clickable when the entered password is strong enough }\r\n      <button\r\n        style={\r\n          isButtonDisabled\r\n            ? { ...styles.button, ...styles.disabledButton }\r\n            : styles.button\r\n        }\r\n        disabled={isButtonDisabled}\r\n        onClick={buttonHandler}\r\n      >\r\n        CONTINUE\r\n      </button>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styling\r\nconst styles = {\r\n  container: {\r\n    width: \"60%\",\r\n    padding: \"30px 90px\",\r\n    margin: \"50px auto\",\r\n    background: \"tan\",\r\n    borderRadius: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  password: {\r\n    width: 300,\r\n    padding: \"8px 10px\",\r\n    border: \"1px solid #444\",\r\n    borderRadius: \"10px\",\r\n    outline: \"none\",\r\n  },\r\n  statusBar: {\r\n    width: 300,\r\n    height: 10,\r\n    marginTop: 20,\r\n    background: \"#fff\",\r\n    border: \"1px solid #444\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  strengthVeryWeak: {\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"red\",\r\n  },\r\n  strengthWeak: {\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"orange\",\r\n  },\r\n  strengthMedium: {\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"yellow\",\r\n  },\r\n  strengthStrong: {\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"lime\",\r\n  },\r\n  strengthVeryStrong: {\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"green\",\r\n  },\r\n  message: {\r\n    padding: \"20px 0\",\r\n  },\r\n  button: {\r\n    padding: \"15px 30px\",\r\n    cursor: \"pointer\",\r\n    background: \"purple\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    border: \"none\",\r\n    borderRadius: \"30px\",\r\n  },\r\n  disabledButton: {\r\n    cursor: \"not-allowed\",\r\n    opacity: 0.3,\r\n  },\r\n} as const;\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}